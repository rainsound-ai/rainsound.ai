let s=0;var r=(()=>{o.main()});let a=s,b=null,c=`undefined`,d=`function`,e=Error,f=undefined;var g=(async(a,b)=>{if(typeof Response===d&&a instanceof Response){if(typeof WebAssembly.instantiateStreaming===d){try{return await WebAssembly.instantiateStreaming(a,b)}catch(b){if(a.headers.get(`Content-Type`)!=`application/wasm`){console.warn(`\`WebAssembly.instantiateStreaming\` failed because your server does not serve wasm with \`application/wasm\` MIME type. Falling back to \`WebAssembly.instantiate\` which is slower. Original error:\\n`,b)}else{throw b}}};const c=await a.arrayBuffer();return await WebAssembly.instantiate(c,b)}else{const c=await WebAssembly.instantiate(a,b);if(c instanceof WebAssembly.Instance){return {instance:c,module:a}}else{return c}}});var h=((a,b)=>{});var i=(()=>{const a={};a.wbg={};a.wbg.__wbindgen_throw=((a,b)=>{throw new e(m(a,b))});return a});var j=(async(a)=>{if(o!==f)return o;if(typeof a===c){a=new URL(`browser_bg.wasm`,import.meta.url)};const b=i();if(typeof a===`string`||typeof Request===d&&a instanceof Request||typeof URL===d&&a instanceof URL){a=fetch(a)};h(b);const {instance:e,module:j}=await g(await a,b);return n(e,j)});var k=(a=>{if(o!==f)return o;const b=i();h(b);if(!(a instanceof WebAssembly.Module)){a=new WebAssembly.Module(a)};const c=new WebAssembly.Instance(a,b);return n(c,a)});var l=(()=>{if(q===b||q.byteLength===a){q=new Uint8Array(o.memory.buffer)};return q});var m=((b,c)=>{b=b>>>a;return p.decode(l().subarray(b,b+ c))});var n=((a,c)=>{o=a.exports;j.__wbindgen_wasm_module=c;q=b;o.__wbindgen_start();return o});let o;const p=typeof TextDecoder!==c?new TextDecoder(`utf-8`,{ignoreBOM:!s,fatal:!s}):{decode:()=>{throw e(`TextDecoder not available`)}};if(typeof TextDecoder!==c){p.decode()};let q=b;export default j;export{r as main,k as initSync}